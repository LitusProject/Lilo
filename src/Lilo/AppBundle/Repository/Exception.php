<?php

namespace Lilo\AppBundle\Repository;

use DateTime,
    Doctrine\ODM\MongoDB\DocumentRepository,
    Lilo\AppBundle\Document\Instance as InstanceDocument,
    Lilo\AppBundle\Document\User as UserDocument;

/**
 * Exception
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Exception extends DocumentRepository
{
    public function findAllSince(DateTime $since, InstanceDocument $instance = null)
    {
        $query = $this->createQueryBuilder()
            ->field('creationTime')->gt($since);

        if (null !== $instance)
            $query->field('instance.id')->equals($instance->getId());

        return $query->sort('creationTime', 'DESC')
            ->getQuery()
            ->execute()
            ->toArray();
    }

    public function findNbUnreadSince(DateTime $since, InstanceDocument $instance, UserDocument $user)
    {
        $read = $this->createQueryBuilder()
            ->field('creationTime')->gt($since)
            ->field('observers.id')->equals($user->getId())
            ->field('instance.id')->equals($instance->getId())
            ->getQuery()
            ->execute()
            ->count();

        $total = $this->createQueryBuilder()
            ->field('creationTime')->gt($since)
            ->field('instance.id')->equals($instance->getId())
            ->getQuery()
            ->execute()
            ->count();

        return $total - $read;
    }
}